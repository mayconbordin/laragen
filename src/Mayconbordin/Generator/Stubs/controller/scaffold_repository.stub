<?php $NAMESPACE$

use $ROOT_NAMESPACE$Http\Requests;
use $ROOT_NAMESPACE$Http\Controllers\Controller;

use Illuminate\Http\Request;
use Mayconbordin\Reloquent\Exceptions\NotFoundError;
use Mayconbordin\Reloquent\Exceptions\ValidationError;
use Mayconbordin\Reloquent\Exceptions\ServerError;
use $MODEL_NAMESPACE$$STUDLY_ENTITY$;
use $REQUEST_NAMESPACE$$STUDLY_PLURAL_ENTITY$\Create$STUDLY_ENTITY$Request;
use $REQUEST_NAMESPACE$$STUDLY_PLURAL_ENTITY$\Update$STUDLY_ENTITY$Request;
use $REPOSITORY_NAMESPACE$$STUDLY_ENTITY$Repository;
use \Lang;

class $CLASS$ extends Controller
{
	/**
	 * @var $STUDLY_ENTITY$Repository
	 */
	protected $$LOWER_SINGULAR_ENTITY$Repository;

	public function __construct($STUDLY_ENTITY$Repository $$LOWER_SINGULAR_ENTITY$Repository)
	{
		$this->$LOWER_SINGULAR_ENTITY$Repository = $$LOWER_SINGULAR_ENTITY$Repository;
	}

	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
		$$LOWER_ENTITIES$ = $STUDLY_ENTITY$Repository->paginate();
		return view('$PREFIX_DOT$$LOWER_ENTITIES$.index', ['$LOWER_ENTITIES$' => $$LOWER_ENTITIES$]);
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		return view('$PREFIX_DOT$$LOWER_ENTITIES$.create');
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store(Create$STUDLY_ENTITY$Request $request)
	{
	    try {
		    $$LOWER_SINGULAR_ENTITY$ = $STUDLY_ENTITY$Repository->create($request->all());
		    return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.index')
		                     ->with('success', Lang::get('$LOWER_SINGULAR_ENTITY$.created'));
		} catch (NotFoundError $e) {
            return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.index')
                             ->with('error', $e->getMessage());
        } catch (ValidationError $e) {
            return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.edit', [$id])
                             ->withErrors($e->getErrors());
        } catch (ServerError $e) {
             return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.edit', [$id])
                              ->with('error', $e->getMessage());
        }
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
	    try {
		    $$LOWER_SINGULAR_ENTITY$ = $STUDLY_ENTITY$Repository->find($id);
		    return view('$PREFIX_DOT$$LOWER_ENTITIES$.show', ['$LOWER_SINGULAR_ENTITY$' => $$LOWER_SINGULAR_ENTITY$]);
		} catch (NotFoundError $e) {
            return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.index')
                             ->with('error', $e->getMessage());
        }
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
	    try {
		    $$LOWER_SINGULAR_ENTITY$ = $STUDLY_ENTITY$Repository->find($id);
		    return view('$PREFIX_DOT$$LOWER_ENTITIES$.edit', ['$LOWER_SINGULAR_ENTITY$' => $$LOWER_SINGULAR_ENTITY$]);
		} catch (NotFoundError $e) {
            return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.index')
                             ->with('error', $e->getMessage());
        }
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update(Update$STUDLY_ENTITY$Request $request, $id)
	{
	    try {
		    $STUDLY_ENTITY$Repository->update($request->all(), $id);
		    return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.edit', [$id])
		                     ->with('success', Lang::get('$LOWER_SINGULAR_ENTITY$.updated'));
        } catch (NotFoundError $e) {
            return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.index')
                             ->with('error', $e->getMessage());
        } catch (ValidationError $e) {
            return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.edit', [$id])
                             ->withErrors($e->getErrors());
        } catch (ServerError $e) {
             return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.edit', [$id])
                              ->with('error', $e->getMessage());
        }
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
	    try {
		    $STUDLY_ENTITY$Repository->delete($id);
		    return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.index')
		                     ->with('success', Lang::get('$LOWER_SINGULAR_ENTITY$.deleted'));
		} catch (NotFoundError $e) {
            return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.index')
                             ->with('error', $e->getMessage());
        } catch (ServerError $e) {
             return redirect()->route('$PREFIX_DOT$$LOWER_ENTITIES$.index')
                              ->with('error', $e->getMessage());
        }
	}

}
